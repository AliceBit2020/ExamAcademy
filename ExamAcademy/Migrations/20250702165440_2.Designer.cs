// <auto-generated />
using ExamAcademy.Controller;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace ExamAcademy.Migrations
{
    [DbContext(typeof(ContextDb))]
    [Migration("20250702165440_2")]
    partial class _2
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.6")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("CuratorGroups", b =>
                {
                    b.Property<int>("CuratorListId")
                        .HasColumnType("int");

                    b.Property<int>("GroupsListId")
                        .HasColumnType("int");

                    b.HasKey("CuratorListId", "GroupsListId");

                    b.HasIndex("GroupsListId");

                    b.ToTable("CuratorGroups");
                });

            modelBuilder.Entity("ExamAcademy.Model.Curator", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasColumnType("nvarchar(max)")
                        .HasDefaultValue("N");

                    b.Property<string>("Surname")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasColumnType("nvarchar(max)")
                        .HasDefaultValue("S");

                    b.HasKey("Id");

                    b.ToTable("Curators");
                });

            modelBuilder.Entity("ExamAcademy.Model.Department", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("Building")
                        .HasColumnType("int");

                    b.Property<int>("FacultyId")
                        .HasColumnType("int");

                    b.Property<decimal>("Financing")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("money")
                        .HasDefaultValue(0m);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("Id");

                    b.HasAlternateKey("Name");

                    b.HasIndex("FacultyId");

                    b.ToTable("Departments", t =>
                        {
                            t.HasCheckConstraint("CK_Building", "Building>=1 and Building<5");

                            t.HasCheckConstraint("CK_Financing", "Financing >=0");
                        });
                });

            modelBuilder.Entity("ExamAcademy.Model.Faculty", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("Id");

                    b.HasAlternateKey("Name");

                    b.ToTable("Facultys");
                });

            modelBuilder.Entity("ExamAcademy.Model.Groups", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("Cours")
                        .HasColumnType("int");

                    b.Property<int>("DepartmentId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasColumnType("nvarchar(10)")
                        .HasDefaultValue("G");

                    b.HasKey("Id");

                    b.HasAlternateKey("Name");

                    b.HasIndex("DepartmentId");

                    b.ToTable("Groups", t =>
                        {
                            t.HasCheckConstraint("CK_Cours", "Cours>=1 and Cours<=5");
                        });
                });

            modelBuilder.Entity("CuratorGroups", b =>
                {
                    b.HasOne("ExamAcademy.Model.Curator", null)
                        .WithMany()
                        .HasForeignKey("CuratorListId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ExamAcademy.Model.Groups", null)
                        .WithMany()
                        .HasForeignKey("GroupsListId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("ExamAcademy.Model.Department", b =>
                {
                    b.HasOne("ExamAcademy.Model.Faculty", "Faculty")
                        .WithMany()
                        .HasForeignKey("FacultyId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Faculty");
                });

            modelBuilder.Entity("ExamAcademy.Model.Groups", b =>
                {
                    b.HasOne("ExamAcademy.Model.Department", "Department")
                        .WithMany("GroupList")
                        .HasForeignKey("DepartmentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Department");
                });

            modelBuilder.Entity("ExamAcademy.Model.Department", b =>
                {
                    b.Navigation("GroupList");
                });
#pragma warning restore 612, 618
        }
    }
}
